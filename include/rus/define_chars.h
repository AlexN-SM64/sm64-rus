#ifndef RUS_DEFINE_CHARS_H
#define RUS_DEFINE_CHARS_H

// Colorful glyphs
#define GLYPH_A 10
#define GLYPH_B 11
#define GLYPH_C 12
#define GLYPH_E 14
#define GLYPH_H 17
#define GLYPH_K 20
#define GLYPH_M 22
#define GLYPH_O 24
#define GLYPH_P 25
#define GLYPH_T 29
#define GLYPH_X 33

#define GLYPH_CYRILLIC_BE        58
#define GLYPH_CYRILLIC_GHE       59
#define GLYPH_CYRILLIC_DE        60
#define GLYPH_CYRILLIC_ZHE       61
#define GLYPH_CYRILLIC_ZE        62
#define GLYPH_CYRILLIC_I         63
#define GLYPH_CYRILLIC_EL        64
#define GLYPH_CYRILLIC_PE        65
#define GLYPH_CYRILLIC_U         66
#define GLYPH_CYRILLIC_EF        67
#define GLYPH_CYRILLIC_TSE       68
#define GLYPH_CYRILLIC_CHE       69
#define GLYPH_CYRILLIC_SHA       70
#define GLYPH_CYRILLIC_SHCHA     71
#define GLYPH_CYRILLIC_HARD_SIGN 72
#define GLYPH_CYRILLIC_YERU      73
#define GLYPH_CYRILLIC_SOFT_SIGN 74
#define GLYPH_CYRILLIC_E         75
#define GLYPH_CYRILLIC_YU        76
#define GLYPH_CYRILLIC_YA        77

#define GLYPH_DIAERESIS 78
#define GLYPH_BREVE     79

#define GLYPH_CYRILLIC_IO      78
#define GLYPH_CYRILLIC_I_SHORT 79

// definitions for some of the special characters defined in charmap.txt
enum DialogSpecialCharsRUS {
	DIALOG_CHAR_DIAERESIS                  = 0x60,
	DIALOG_CHAR_CAPITAL_BREVE              = 0x61,
	DIALOG_CHAR_SMALL_BREVE                = 0x62,
	DIALOG_CHAR_CYRILLIC_CAPITAL_BE        = 0x70,
	DIALOG_CHAR_CYRILLIC_CAPITAL_GHE       = 0x71,
	DIALOG_CHAR_CYRILLIC_CAPITAL_DE        = 0x72,
	DIALOG_CHAR_CYRILLIC_CAPITAL_ZHE       = 0x73,
	DIALOG_CHAR_CYRILLIC_CAPITAL_ZE        = 0x74,
    DIALOG_CHAR_CYRILLIC_CAPITAL_I         = 0x75,
	DIALOG_CHAR_CYRILLIC_CAPITAL_EL        = 0x76,
	DIALOG_CHAR_CYRILLIC_CAPITAL_PE        = 0x77,
	DIALOG_CHAR_CYRILLIC_CAPITAL_U         = 0x78,
	DIALOG_CHAR_CYRILLIC_CAPITAL_EF        = 0x79,
	DIALOG_CHAR_CYRILLIC_CAPITAL_TSE       = 0x7A,
	DIALOG_CHAR_CYRILLIC_CAPITAL_CHE       = 0x7B,
	DIALOG_CHAR_CYRILLIC_CAPITAL_SHA       = 0x7C,
	DIALOG_CHAR_CYRILLIC_CAPITAL_SHCHA     = 0x7D,
	DIALOG_CHAR_CYRILLIC_CAPITAL_HARD_SIGN = 0x7E,
	DIALOG_CHAR_CYRILLIC_CAPITAL_YERU      = 0x7F,
	DIALOG_CHAR_CYRILLIC_CAPITAL_SOFT_SIGN = 0x80,
	DIALOG_CHAR_CYRILLIC_CAPITAL_E         = 0x81,
	DIALOG_CHAR_CYRILLIC_CAPITAL_YU        = 0x82,
	DIALOG_CHAR_CYRILLIC_CAPITAL_YA        = 0x83,
	DIALOG_CHAR_CYRILLIC_SMALL_BE          = 0x84,
	DIALOG_CHAR_CYRILLIC_SMALL_VE          = 0x85,
	DIALOG_CHAR_CYRILLIC_SMALL_GHE         = 0x86,
	DIALOG_CHAR_CYRILLIC_SMALL_DE          = 0x87,
	DIALOG_CHAR_CYRILLIC_SMALL_ZHE         = 0x88,
	DIALOG_CHAR_CYRILLIC_SMALL_ZE          = 0x89,
	DIALOG_CHAR_CYRILLIC_SMALL_KA          = 0x8A,
	DIALOG_CHAR_CYRILLIC_SMALL_EL          = 0x8B,
	DIALOG_CHAR_CYRILLIC_SMALL_EM          = 0x8C,
	DIALOG_CHAR_CYRILLIC_SMALL_EN          = 0x8D,
	DIALOG_CHAR_CYRILLIC_SMALL_EF          = 0x8E,
	DIALOG_CHAR_CYRILLIC_SMALL_TSE         = 0x8F,
	DIALOG_CHAR_CYRILLIC_SMALL_CHE         = 0x90,
	DIALOG_CHAR_CYRILLIC_SMALL_SHA         = 0x91,
	DIALOG_CHAR_CYRILLIC_SMALL_SHCHA       = 0x92,
	DIALOG_CHAR_CYRILLIC_SMALL_HARD_SIGN   = 0x93,
	DIALOG_CHAR_CYRILLIC_SMALL_YERU        = 0x94,
	DIALOG_CHAR_CYRILLIC_SMALL_SOFT_SIGN   = 0x95,
	DIALOG_CHAR_CYRILLIC_SMALL_E           = 0x96,
	DIALOG_CHAR_CYRILLIC_SMALL_YU          = 0x97,
	DIALOG_CHAR_CYRILLIC_SMALL_YA          = 0x98,
    DIALOG_CHANGE_POSITION_Y               = 0xA0,
    DIALOG_CHANGE_SIMULFIX_IN_WORD_ZVEZDA  = 0xA1,
    DIALOG_CHANGE_SUFFIX_IN_WORD_ZVEZDA    = 0xA2,
};

enum DialogMarksRUS {
	DIALOG_MARK_DIAERESIS = 1,
	DIALOG_MARK_BREVE     = 2
};

#define DIALOG_CHAR_NONE              0xFF
#define DIALOG_CHAR_CYRILLIC_SMALL_IO 0xA1

enum MenuSpecialCharsRUS {
	MENU_CHAR_UNDERSYM_LEFT    = 0x62,
	MENU_CHAR_UNDERSYM_RIGHT   = 0x63
};

enum CreditsSpecialCharsRUS {
	CREDITS_CHAR_CYRILLIC_BE        = 0x25,
	CREDITS_CHAR_CYRILLIC_GHE       = 0x26,
	CREDITS_CHAR_CYRILLIC_DE        = 0x27,
	CREDITS_CHAR_CYRILLIC_ZHE       = 0x28,
	CREDITS_CHAR_CYRILLIC_ZE        = 0x29,
	CREDITS_CHAR_CYRILLIC_I         = 0x2A,
	CREDITS_CHAR_CYRILLIC_EL        = 0x2B,
	CREDITS_CHAR_CYRILLIC_PE        = 0x2C,
	CREDITS_CHAR_CYRILLIC_U         = 0x2D,
	CREDITS_CHAR_CYRILLIC_EF        = 0x2E,
	CREDITS_CHAR_CYRILLIC_TSE       = 0x2F,
	CREDITS_CHAR_CYRILLIC_CHE       = 0x30,
	CREDITS_CHAR_CYRILLIC_SHA       = 0x31,
	CREDITS_CHAR_CYRILLIC_SHCHA     = 0x32,
	CREDITS_CHAR_CYRILLIC_HARD_SIGN = 0x33,
	CREDITS_CHAR_CYRILLIC_YERU      = 0x34,
	CREDITS_CHAR_CYRILLIC_SOFT_SIGN = 0x35,
	CREDITS_CHAR_CYRILLIC_E         = 0x36,
	CREDITS_CHAR_CYRILLIC_YU        = 0x37,
	CREDITS_CHAR_CYRILLIC_YA        = 0x38,
	CREDITS_CHAR_CYRILLIC_IO        = 0x39,
	CREDITS_CHAR_CYRILLIC_I_SHORT   = 0x3A
};

enum CreditsSpecialAddsRUS {
	CREDITS_CHAR_DIAERESIS          = 0x39,
	CREDITS_CHAR_BREVE              = 0x3A,
	CREDITS_CHAR_UNDERSYM_LEFT      = 0x3B,
	CREDITS_CHAR_UNDERSYM_RIGHT     = 0x3C
};

#endif
