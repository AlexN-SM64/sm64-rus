#ifndef RUS_INGAME_MENU_ANSI_TO_CREDITS_CHAR_H
#define RUS_INGAME_MENU_ANSI_TO_CREDITS_CHAR_H

#include "rus/windows_1251_charmap.h"

if (c == ANSI_CHAR_CYRILLIC_CAPITAL_A || c == ANSI_CHAR_CYRILLIC_SMALL_A) {
    return ASCII_TO_DIALOG('A');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_BE || c == ANSI_CHAR_CYRILLIC_SMALL_BE) {
    return CREDITS_CHAR_CYRILLIC_BE;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_VE || c == ANSI_CHAR_CYRILLIC_SMALL_VE) {
    return ASCII_TO_DIALOG('B');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_GHE || c == ANSI_CHAR_CYRILLIC_SMALL_GHE) {
    return CREDITS_CHAR_CYRILLIC_GHE;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_DE || c == ANSI_CHAR_CYRILLIC_SMALL_DE) {
    return CREDITS_CHAR_CYRILLIC_DE;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_IE || c == ANSI_CHAR_CYRILLIC_SMALL_IE) {
    return ASCII_TO_DIALOG('E');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_IO || c == ANSI_CHAR_CYRILLIC_SMALL_IO) {
    return CREDITS_CHAR_CYRILLIC_IO;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_ZHE || c == ANSI_CHAR_CYRILLIC_SMALL_ZHE) {
    return CREDITS_CHAR_CYRILLIC_ZHE;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_ZE || c == ANSI_CHAR_CYRILLIC_SMALL_ZE) {
    return CREDITS_CHAR_CYRILLIC_ZE;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_I || c == ANSI_CHAR_CYRILLIC_SMALL_I) {
    return CREDITS_CHAR_CYRILLIC_I;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_I_SHORT || c == ANSI_CHAR_CYRILLIC_SMALL_I_SHORT) {
    return CREDITS_CHAR_CYRILLIC_I_SHORT;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_KA || c == ANSI_CHAR_CYRILLIC_SMALL_KA) {
    return ASCII_TO_DIALOG('K');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_EL || c == ANSI_CHAR_CYRILLIC_SMALL_EL) {
    return CREDITS_CHAR_CYRILLIC_EL;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_EM || c == ANSI_CHAR_CYRILLIC_SMALL_EM) {
    return ASCII_TO_DIALOG('M');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_EN || c == ANSI_CHAR_CYRILLIC_SMALL_EN) {
    return ASCII_TO_DIALOG('H');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_O || c == ANSI_CHAR_CYRILLIC_SMALL_O) {
    return ASCII_TO_DIALOG('O');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_PE || c == ANSI_CHAR_CYRILLIC_SMALL_PE) {
    return CREDITS_CHAR_CYRILLIC_PE;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_ER || c == ANSI_CHAR_CYRILLIC_SMALL_ER) {
    return ASCII_TO_DIALOG('P');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_ES || c == ANSI_CHAR_CYRILLIC_SMALL_ES) {
    return ASCII_TO_DIALOG('C');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_TE || c == ANSI_CHAR_CYRILLIC_SMALL_TE) {
    return ASCII_TO_DIALOG('T');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_U || c == ANSI_CHAR_CYRILLIC_SMALL_U) {
    return CREDITS_CHAR_CYRILLIC_U;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_EF || c == ANSI_CHAR_CYRILLIC_SMALL_EF) {
    return CREDITS_CHAR_CYRILLIC_EF;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_HA || c == ANSI_CHAR_CYRILLIC_SMALL_HA) {
    return ASCII_TO_DIALOG('X');
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_TSE || c == ANSI_CHAR_CYRILLIC_SMALL_TSE) {
    return CREDITS_CHAR_CYRILLIC_TSE;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_CHE || c == ANSI_CHAR_CYRILLIC_SMALL_CHE) {
    return CREDITS_CHAR_CYRILLIC_CHE;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_SHA || c == ANSI_CHAR_CYRILLIC_SMALL_SHA) {
    return CREDITS_CHAR_CYRILLIC_SHA;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_SHCHA || c == ANSI_CHAR_CYRILLIC_SMALL_SHCHA) {
    return CREDITS_CHAR_CYRILLIC_SHCHA;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_HARD_SIGN || c == ANSI_CHAR_CYRILLIC_SMALL_HARD_SIGN) {
    return CREDITS_CHAR_CYRILLIC_HARD_SIGN;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_YERU || c == ANSI_CHAR_CYRILLIC_SMALL_YERU) {
    return CREDITS_CHAR_CYRILLIC_YERU;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_SOFT_SIGN || c == ANSI_CHAR_CYRILLIC_SMALL_SOFT_SIGN) {
    return CREDITS_CHAR_CYRILLIC_SOFT_SIGN;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_E || c == ANSI_CHAR_CYRILLIC_SMALL_E) {
    return CREDITS_CHAR_CYRILLIC_E;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_YU || c == ANSI_CHAR_CYRILLIC_SMALL_YU) {
    return CREDITS_CHAR_CYRILLIC_YU;
}
if (c == ANSI_CHAR_CYRILLIC_CAPITAL_YA || c == ANSI_CHAR_CYRILLIC_SMALL_YA) {
    return CREDITS_CHAR_CYRILLIC_YA;
}

#endif // This will be used in "src/game/ingame_menu.c"
